"0",""
"0","# Predict the probability on train - cutoff 0.5"
"0","test$PredProb <- predict.glm(glm1, newdata = test, type = 'response')"
"0",""
"0","#create Prediction Indicators for y"
"0","test$Pred_Y <- ifelse(test$PredProb >= 0.5, 1, 0)"
"0",""
"0","caret::confusionMatrix(as.factor(test$Choice),as.factor(test$Pred_Y), positive = '1') #this function and , positive = '1'"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 2005"
"1","   91"
"1","
         1"
"1","  140"
"1","   64"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.8996          "
"1","
"
"1","                 95% CI :"
"1"," (0.8866, 0.9116)"
"1","
"
"1","    No Information Rate :"
"1"," 0.9326          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 1.000000        "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.3032          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.001588        "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.41290         "
"1","
"
"1","            Specificity :"
"1"," 0.93473         "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.31373         "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.95658         "
"1","
"
"1","             Prevalence :"
"1"," 0.06739         "
"1","
"
"1","         Detection Rate :"
"1"," 0.02783         "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.08870         "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.67382         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 1               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","## 89.96 Accuracy"
"0","## 41.29 Sensitivity"
"0","## 93.47 Specificity"
"0",""
"0","#create Prediction Indicators for y"
"0","test$Pred_Y <- ifelse(test$PredProb >= 0.8, 1, 0)"
"0",""
"0","caret::confusionMatrix(as.factor(test$Choice),as.factor(test$Pred_Y), positive = '1') #this function and , positive = '1'"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 2095"
"1","    1"
"1","
         1"
"1","  199"
"1","    5"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.913           "
"1","
"
"1","                 95% CI :"
"1"," (0.9008, 0.9242)"
"1","
"
"1","    No Information Rate :"
"1"," 0.9974          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 1               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.0428          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," <2e-16          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.833333        "
"1","
"
"1","            Specificity :"
"1"," 0.913252        "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.024510        "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.999523        "
"1","
"
"1","             Prevalence :"
"1"," 0.002609        "
"1","
"
"1","         Detection Rate :"
"1"," 0.002174        "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.088696        "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.873293        "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 1               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","## 89.96 Accuracy"
"0","## 41.29 Sensitivity"
"0","## 93.47 Specificity"
"0",""
