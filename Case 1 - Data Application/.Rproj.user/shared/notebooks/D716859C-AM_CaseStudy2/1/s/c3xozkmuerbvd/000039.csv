"0","
# Predict the probability on TEST - cutoff 0.5
test$PredProb <- predict.glm(glm1, newdata = test, type = 'response')

#create Prediction Indicators for y
test$Pred_Y <- ifelse(test$PredProb >= 0.5, 1, 0)

caret::confusionMatrix(as.factor(test$Choice),as.factor(test$Pred_Y), positive = '1') #this function and 
"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 1968"
"1","  128"
"1","
         1"
"1","  125"
"1","   79"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.89            "
"1","
"
"1","                 95% CI :"
"1"," (0.8765, 0.9025)"
"1","
"
"1","    No Information Rate :"
"1"," 0.91            "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 0.9995          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.324           "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.8999          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.38164         "
"1","
"
"1","            Specificity :"
"1"," 0.94028         "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.38725         "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.93893         "
"1","
"
"1","             Prevalence :"
"1"," 0.09000         "
"1","
"
"1","         Detection Rate :"
"1"," 0.03435         "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.08870         "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.66096         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 1               "
"1","
"
"1","                         "
"1","                 "
"1","
"
