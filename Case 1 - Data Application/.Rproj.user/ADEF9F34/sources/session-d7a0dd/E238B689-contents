---
title: "Case Study 1"
author: "Alex Martinez"
date: "2024-09-10"
output: pdf_document
---

```{r libraries, include=FALSE}
#idk what i was going to use so i added everything that seemed useful
library(caret)
library(here)
library(lattice)
library(ggplot2)
library(logistf)
library(MASS)
library(tidyverse)
library(corrplot)
library(car)
```

####Created a template below and we can modify titles as progress####

# Executive Summary

Brief introduction of problem. Summarizes key findings. Summarizes insights behind key findings.

# Our Problem

Clear description of the problem, from an application and theoretical point of view. Outlines the report.

# Literature Review

Discusses and cites existing works in the theoretical and application realm.

# Methods

Discusses types of variables, sample size, and sampling techniques (if any). Discusses the model(s) and its assumptions and limitations.

# Data

Discusses how data was handled, i.e. cleaned and preprocessed. Discusses distributions, correlations, etc.

```{r Loading Data, warning=FALSE}
#df1 <- read.csv2("~/MS Data Applications/wk03 Bank Case Study/bank-additional.csv")

##### We can delete the path above once we confirm if works for you guys #####

#| echo: false
getwd() #open R project file to have the same file path
df1 = read.csv2('Data/bank-additional.csv') # Reading the csv from the location above

```

## Data Structure

```{r Data Structure}
str(df1) #Should we keep in final paper or hide?
```

## Data Cleanup

```{r Data Cleanup}
#change y into factor 
df1$y<-as.factor(df1$y)
df1$job<- as.factor(df1$job)
df1$marital <- as.factor(df1$marital)
df1$education <- as.factor(df1$education)
df1$default <- as.factor(df1$default)
df1$housing<- as.factor(df1$housing)
df1$loan <- as.factor(df1$loan)
df1$contact <- as.factor(df1$contact)
df1$month <- as.factor(df1$month)
df1$day_of_week <- as.factor(df1$day_of_week)
df1$poutcome <- as.factor(df1$poutcome)
df1$emp.var.rate <- as.numeric(df1$emp.var.rate)
df1$cons.price.idx <- as.numeric(df1$cons.price.idx)
df1$cons.conf.idx <- as.numeric(df1$cons.conf.idx)
df1$euribor3m <- as.numeric(df1$euribor3m)
df1$nr.employed <- as.integer(df1$nr.employed)
unique(df1$previous)
unique(df1$pdays)

#Pdays - make it an indicator of not/yes
#duration - amt of time you have them, so same as Y 

```

# Results

Presents and discusses the results from model(s). Discusses relationships between covariates and response, if possible, and provides deep insights behind relationships in the context of the application.

# Conclusions

Concludes with a summary of the aim and results. Discusses alternative methods that can be used.

```{r}
#Exploring variables 




# is there high correlation in any of our numeric variables
df_num <- dplyr::select_if(df1, is.numeric)
M = cor(df_num)
#looks like there is higher correlation between pdays and previous but it is under .6 
corrplot(M, method = c("number"))

#data is unbalanced 3.6k no, 451 yes
summary(df1$y)
```



### MOdel Building
```{r model building}
# since data is unbalanced we should take a more balanced sample
 
df_y_y = df1 %>% filter(y == "yes")
df_y_n = df1 %>% filter(y == "no")
sample_y = sample_n(df_y_n, nrow(df_y_y))
df_bal = rbind(df_y_y,sample_y)

# test and train split
set.seed(42)
df_bal_split <- sample(nrow(df_bal),0.8*nrow(df_bal),replace = F) # Setting training sample to be 80% of the data
df_train <- df_bal[df_bal_split,]
df_test <- df_bal[-df_bal_split,]

#glm model
glm <- glm(y ~ . - pdays - duration, data = df_train, family = binomial) #Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
glm.back = step(glm(y ~ . - pdays - duration, data = df_train, family = binomial), direction = "backward") # stepwise backward elim.

summary(glm)
summary(glm.back) ## look at results

vif(glm.back)

#remove high vif
bck2 <- glm(y ~ age + marital + contact + month + campaign + poutcome + 
              cons.price.idx + euribor3m
            , data = df_train, family = binomial)

summary(bck2)
vif(bck2)
#running again but with Firthâ€™s penalized likelihood approach
firth <- logistf(y ~ ., data = df_train,firth = TRUE)
```
